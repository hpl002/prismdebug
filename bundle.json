{
  "openapi": "3.0.0",
  "info": {
    "title": "Example API",
    "description": "An Example of how to set up the API Gateway.",
    "version": "v1",
    "contact": { "email": "flow@stacc.com" }
  },
  "servers": [{ "url": "http://localhost:3010/api", "description": "Sandbox" }],
  "x-flow-proxies": {
    "flow-service-proxy": { "target": "http://localhost:3020" }
  },
  "tags": [{ "name": "Account Service" }],
  "paths": {
    "/accounts": {
      "x-flow-proxy": "flow-service-proxy",
      "get": {
        "tags": ["Account Service"],
        "summary": "Gets all accounts",
        "responses": {
          "200": {
            "description": "Returns array of accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "type": { "type": "string" }
                    }
                  }
                },
                "examples": {
                  "scenario-1": {
                    "summary": "List of accounts",
                    "value": [
                      { "id": 11, "type": "Mock Checking Account scenario-1" },
                      { "id": 12, "type": "Mock Loan Account scenario-1" }
                    ]
                  },
                  "scenario-2": {
                    "summary": "List of accounts",
                    "value": [
                      { "id": 21, "type": "Mock Checking Account scenario-2" },
                      { "id": 22, "type": "Mock Loan Account scenario-2" }
                    ]
                  },
                  "scenario-3": {
                    "summary": "List of accounts",
                    "value": [
                      { "id": 11123, "type": "Mock Checking Account" },
                      { "id": 22376, "type": "Mock Loan Account" },
                      { "id": 11456, "type": "Mock Business expenses account" },
                      { "id": 22323, "type": "Mock Savings account" },
                      { "id": 1184, "type": "Mock Business holdings account" },
                      { "id": 22322, "type": "Moch Business savings account" },
                      { "id": 11678, "type": "Mock Expired personal account" },
                      {
                        "id": 22354543,
                        "type": "Mock Personal expenses account"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": { "description": "Not found" }
        }
      }
    },
    "/accounts/{id}": {
      "x-flow-proxy": "flow-service-proxy",
      "get": {
        "tags": ["Account Service"],
        "summary": "Gets a specific account by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id as integer",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific account by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "type": { "type": "string" }
                  }
                },
                "examples": {
                  "scenario-1": {
                    "summary": "Single account",
                    "value": [{ "id": 1123, "type": "Mock Checking Account" }]
                  },
                  "scenario-2": {
                    "summary": "Single account",
                    "value": [{ "id": 11, "type": "Mock Checking Account" }]
                  },
                  "scenario-3": {
                    "summary": "Single account",
                    "value": [
                      { "id": 1184, "type": "Mock Business holdings account" }
                    ]
                  }
                }
              }
            }
          },
          "404": { "description": "Not found" }
        }
      }
    },
    "/accounts/{id}/transactions": {
      "x-flow-proxy": "flow-service-proxy",
      "get": {
        "x-flow-handlers": { "pathRewrite": "transactions.get.pathRewrite" },
        "tags": ["Account Service"],
        "summary": "Get transactions pertaining to account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id as integer",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "type": { "type": "string" },
                      "amount": { "type": "integer" }
                    }
                  }
                },
                "examples": {
                  "scenario-1": {
                    "summary": "List of transactions",
                    "value": [
                      { "id": 1, "type": "DEPOSIT", "amount": 100054 },
                      { "id": 2, "type": "WITHDRAWAL", "amount": 2505445 }
                    ]
                  },
                  "scenario-2": {
                    "summary": "List of transactions",
                    "value": [
                      { "id": 1, "type": "MockDEPOSIT", "amount": 1000 },
                      { "id": 2, "type": "Mock WITHDRAWAL", "amount": 250 },
                      { "id": 3, "type": "Mock DEPOSIT", "amount": 1000243 },
                      {
                        "id": 4,
                        "type": "Mock WITHDRAWAL",
                        "amount": 250234234
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/accounts/{id}/transactions/{id}": {
      "x-flow-proxy": "flow-service-proxy",
      "get": {
        "x-flow-handlers": {
          "responseRewrite": "transaction.get.responseRewrite"
        },
        "tags": ["Account Service"],
        "summary": "Get transaction pertaining to account by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id as integer",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "single transaction pertaining to account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "type": { "type": "string" },
                    "amount": { "type": "integer" }
                  }
                },
                "examples": {
                  "simple": {
                    "summary": "Transaction",
                    "value": { "type": "DEPOSIT", "amount": 1000 }
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/post-a-string": {
      "x-flow-proxy": "flow-service-proxy",
      "post": {
        "x-flow-handlers": {
          "requestRewrite": "postAString.post.requestRewrite"
        },
        "tags": ["Account Service"],
        "summary": "Post a string and get it returned",
        "requestBody": {
          "description": "Optional description in *Markdown*",
          "required": true,
          "content": { "text/plain": { "schema": { "type": "string" } } }
        },
        "responses": { "200": { "description": "returns the posted string" } }
      }
    },
    "/custom-route": {
      "x-flow-proxy": "flow-service-proxy",
      "get": {
        "x-flow-handlers": { "route": "customRoute.get" },
        "tags": ["Account Service"],
        "summary": "Custom route",
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/before-request": {
      "x-flow-proxy": "flow-service-proxy",
      "get": {
        "x-flow-handlers": {
          "beforeRequest": "beforeRequest.get.beforeRequest",
          "onProxyReq": "beforeRequest.get.onProxyReq"
        },
        "tags": ["Account Service"],
        "summary": "request with before request and onproxyrequest handler",
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/request-with-schema": {
      "x-flow-proxy": "flow-service-proxy",
      "post": {
        "tags": ["Account Service"],
        "summary": "POST request with specified schema",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "age",
                "type": "object",
                "required": ["age"],
                "properties": { "age": { "type": "integer" } }
              }
            }
          },
          "description": "Create pet",
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/get-should-have-no-body": {
      "x-flow-proxy": "flow-service-proxy",
      "get": {
        "tags": ["Account Service"],
        "summary": "get without a schema",
        "responses": { "200": { "description": "OK" } }
      }
    }
  },
  "components": {
    "schemas": {
      "age": {
        "description": "age",
        "type": "object",
        "required": ["age"],
        "properties": { "age": { "type": "integer" } }
      }
    },
    "parameters": {
      "id": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "id as integer",
        "schema": { "type": "integer" }
      }
    }
  }
}
